version: "3.8"

services:
  activepieces:
    image: ghcr.io/activepieces/activepieces:0.35.0
    restart: unless-stopped
    networks:
      - dokploy-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - AP_DB_TYPE=POSTGRES
      - AP_POSTGRES_DATABASE=${AP_POSTGRES_DATABASE}
      - AP_POSTGRES_PASSWORD=${AP_POSTGRES_PASSWORD}
      - AP_POSTGRES_USERNAME=${AP_POSTGRES_USERNAME}
      - AP_POSTGRES_HOST=postgres
      - AP_POSTGRES_PORT=5432
      - AP_POSTGRES_USE_SSL=false
      - AP_QUEUE_MODE=REDIS
      - AP_REDIS_HOST=redis
      - AP_REDIS_PORT=6379
      - AP_REDIS_PASSWORD=${AP_REDIS_PASSWORD}
      - AP_REDIS_DB=0
      - AP_REDIS_USE_SSL=false
      - AP_ENVIRONMENT=prod
      - AP_FRONTEND_URL=https://${AP_HOST}
      - AP_ENCRYPTION_KEY=${AP_ENCRYPTION_KEY}
      - AP_JWT_SECRET=${AP_JWT_SECRET}
      - AP_ENGINE_EXECUTABLE_PATH=dist/packages/engine/main.js
      - AP_EXECUTION_MODE=UNSANDBOXED
      - AP_FLOW_WORKER_CONCURRENCY=10
      - AP_SCHEDULED_WORKER_CONCURRENCY=10
      - AP_TELEMETRY_ENABLED=false
      - AP_PIECES_SOURCE=DB
      - AP_PIECES_SYNC_MODE=OFFICIAL_AUTO
      - AP_WEBHOOK_TIMEOUT_SECONDS=30
      - AP_TRIGGER_DEFAULT_POLL_INTERVAL=5
      - AP_FLOW_TIMEOUT_SECONDS=600
      - AP_EXECUTION_DATA_RETENTION_DAYS=30
      - AP_PROJECT_RATE_LIMITER_ENABLED=true
      - AP_MAX_CONCURRENT_JOBS_PER_PROJECT=100
      - AP_FILE_STORAGE_LOCATION=DB

  postgres:
    image: postgres:14.4
    restart: unless-stopped
    networks:
      - dokploy-network
    environment:
      - POSTGRES_DB=${AP_POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${AP_POSTGRES_PASSWORD}
      - POSTGRES_USER=${AP_POSTGRES_USERNAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AP_POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.7
    command: redis-server --requirepass ${AP_REDIS_PASSWORD}
    networks:
      - dokploy-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${AP_REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: 